CREATE DATABASE mydb;
USE mydb;

-- User Parent Table
CREATE TABLE user_parent (
    id         INT AUTO_INCREMENT PRIMARY KEY,
    email      VARCHAR(255) NOT NULL UNIQUE,
    fname      VARCHAR(255) NOT NULL,
    lname      VARCHAR(255),
    password   VARCHAR(255) NOT NULL,
    user_type  TINYINT NOT NULL, -- 0 = Buyer, 1 = Seller, 2 = Admin
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Contact Details
CREATE TABLE contact_detail (
    user_id      INT,
    address_id   INT AUTO_INCREMENT PRIMARY KEY,
    street1      VARCHAR(255) NOT NULL,
    street2      VARCHAR(255),
    city         VARCHAR(50) NOT NULL,
    state        VARCHAR(50) NOT NULL,
    country      VARCHAR(50) NOT NULL,
    zipcode      VARCHAR(20) NOT NULL,
    is_default   TINYINT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Seller Table
CREATE TABLE seller (
    user_id         INT PRIMARY KEY,
    description     TEXT,
    average_rating  FLOAT DEFAULT 2.5,
    rating_count    INT DEFAULT 0,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Company Table
CREATE TABLE company (
    company_id     INT AUTO_INCREMENT PRIMARY KEY,
    user_id        INT NOT NULL, -- Links to seller's user_id
    name           VARCHAR(255) NOT NULL,
    url            VARCHAR(255),
    description    TEXT,
    created_at     DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at     DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES seller(user_id) ON DELETE CASCADE
);

-- Buyer Table
CREATE TABLE buyer (
    user_id           INT PRIMARY KEY,
    is_prime          TINYINT DEFAULT 0,
    prime_expiry_date DATE,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Admin Table
CREATE TABLE admin (
    user_id     INT PRIMARY KEY,
    role        VARCHAR(50) DEFAULT 'superadmin',
    created_at  DATETIME DEFAULT CURRENT_TIMESTAMP,
    updated_at  DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Categories
CREATE TABLE category (
    category_id   INT AUTO_INCREMENT PRIMARY KEY,
    name          VARCHAR(255) NOT NULL
);

-- Products
CREATE TABLE product (
    product_id      INT AUTO_INCREMENT PRIMARY KEY,
    name            VARCHAR(255) NOT NULL,
    company_id      INT NOT NULL,
    price           DECIMAL(10, 2) NOT NULL,
    category_id     INT,
    description     TEXT,
    available_units INT,
    in_stock        TINYINT DEFAULT 1,
    average_rating  FLOAT DEFAULT 0,
    rating_count    INT DEFAULT 0,
    FOREIGN KEY (company_id) REFERENCES company(company_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES category(category_id) ON DELETE SET NULL
);

-- Product Images
CREATE TABLE product_image (
    product_id    INT,
    image_url     VARCHAR(255) NOT NULL,
    image_id      INT AUTO_INCREMENT PRIMARY KEY,
    FOREIGN KEY (product_id) REFERENCES product(product_id) ON DELETE CASCADE
);

-- Shopping Cart
CREATE TABLE shopping_cart (
    cart_id     INT AUTO_INCREMENT PRIMARY KEY,
    user_id     INT,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Products in Shopping Cart
CREATE TABLE product_shoppingcart (
    cart_id     INT,
    product_id  INT,
    quantity    INT NOT NULL,
    PRIMARY KEY (cart_id, product_id),
    FOREIGN KEY (cart_id) REFERENCES shopping_cart(cart_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES product(product_id) ON DELETE CASCADE
);

-- Orders
CREATE TABLE orders (
    order_id     INT AUTO_INCREMENT PRIMARY KEY,
    user_id      INT,
    total_price  DECIMAL(10, 2) NOT NULL,
    order_date   DATETIME DEFAULT CURRENT_TIMESTAMP,
    status       VARCHAR(20) DEFAULT 'Pending',
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Order Products
CREATE TABLE order_product (
    order_id     INT,
    product_id   INT,
    quantity     INT NOT NULL,
    PRIMARY KEY (order_id, product_id),
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES product(product_id) ON DELETE CASCADE
);

-- Reviews
CREATE TABLE review (
    review_id   INT AUTO_INCREMENT PRIMARY KEY,
    product_id  INT,
    user_id     INT,
    rating      FLOAT NOT NULL CHECK (rating BETWEEN 1 AND 5),
    review_text TEXT,
    FOREIGN KEY (product_id) REFERENCES product(product_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES user_parent(id) ON DELETE CASCADE
);

-- Review Images
CREATE TABLE review_image (
    review_id   INT,
    image_url   VARCHAR(255),
    PRIMARY KEY (review_id, image_url),
    FOREIGN KEY (review_id) REFERENCES review(review_id) ON DELETE CASCADE
);

-- Carriers
CREATE TABLE carriers (
    carrier_id   INT AUTO_INCREMENT PRIMARY KEY,
    name         VARCHAR(255) NOT NULL,
    email        VARCHAR(255) UNIQUE,
    phone        VARCHAR(15),
    created_at   DATETIME DEFAULT CURRENT_TIMESTAMP
);

-- Shipments
CREATE TABLE shipment (
    shipment_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id    INT,
    carrier_id  INT,
    tracking_number VARCHAR(50),
    status      VARCHAR(20) DEFAULT 'In Transit',
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (carrier_id) REFERENCES carriers(carrier_id) ON DELETE CASCADE
);